#!/usr/bin/env ruby
# Tarrant Rollins <tarrant@daemonomicon.com>
require "getoptlong"

$conf = {}

# http://stackoverflow.com/questions/5661466/test-if-string-is-a-number-in-ruby-on-rails
def is_number?(value)
    true if Float(value) rescue false
end

def parse_options()
  opts = GetoptLong.new(
      ["--lock",  "-f", GetoptLong::OPTIONAL_ARGUMENT],
      ["--command", "-c", GetoptLong::OPTIONAL_ARGUMENT],
      ["--exit-code", GetoptLong::OPTIONAL_ARGUMENT]
  )

  opts.each do |arg, opt|
    case arg
    when'--lock', '-f'
      $conf[:lock] = opt
    when '--command', 'c'
      $conf[:command] = opt
    when '--exit-code'
      unless is_number? opt
        STDERR.puts "Invalid exit code."
        exit 1
      end
      $conf[:exit_code] = opt.to_i
    end
  end

  if ARGV.length >= 1 and not $conf[:lock]
    $conf[:lock] = ARGV.shift
  end
  if ARGV.length >= 1 and not $conf[:command]
    $conf[:command] = ARGV.join(' ')
  end

  unless $conf[:command]
    STDERR.puts "Must specifiy a command to run."
    exit 1
  end

  unless $conf[:lock]
    STDERR.puts "Must specifiy a lock file."
    exit 1
  end
end

def run()
  parse_options()

  File.open($conf[:lock], File::RDWR|File::CREAT, 0644) do |f|
    f.flock(File::LOCK_EX | File::LOCK_NB) or (
      exit_code = ($conf[:exit_code] or 5)
      exit exit_code
    )

    system($conf[:command])

    f.flock(File::LOCK_UN)
  end
end

if __FILE__ == $0
  run()
end
